{"version":3,"file":"ipc.js","sources":["../src/src/renderer/ipc.ts"],"sourcesContent":["/* eslint-disable no-restricted-globals */\n/* eslint-disable no-console */\nimport { logger, uuid4 } from '@sentry/utils';\n\nimport {\n  IPCChannel,\n  IPCInterface,\n  MetricIPCMessage,\n  PROTOCOL_SCHEME,\n  RENDERER_ID_HEADER,\n  RendererStatus,\n} from '../common/ipc';\n\nfunction buildUrl(channel: IPCChannel): string {\n  // We include sentry_key in the URL so these don't end up in fetch breadcrumbs\n  // https://github.com/getsentry/sentry-javascript/blob/a3f70d8869121183bec037571a3ee78efaf26b0b/packages/browser/src/integrations/breadcrumbs.ts#L240\n  return `${PROTOCOL_SCHEME}://${channel}/sentry_key`;\n}\n\n/** Gets the available IPC implementation */\nfunction getImplementation(): IPCInterface {\n  // Favour IPC if it's been exposed by a preload script\n  if (window.__SENTRY_IPC__) {\n    return window.__SENTRY_IPC__;\n  } else {\n    logger.log('IPC was not configured in preload script, falling back to custom protocol and fetch');\n\n    // A unique ID used to identify this renderer and is send in the headers of every request\n    // Because it added as a global, this can be fetched from the main process via executeJavaScript\n    const id = (window.__SENTRY_RENDERER_ID__ = uuid4());\n    const headers: Record<string, string> = { [RENDERER_ID_HEADER]: id };\n\n    return {\n      sendRendererStart: () => {\n        fetch(buildUrl(IPCChannel.RENDERER_START), { method: 'POST', body: '', headers }).catch(() => {\n          console.error(`Sentry SDK failed to establish connection with the Electron main process.\n  - Ensure you have initialized the SDK in the main process\n  - If your renderers use custom sessions, be sure to set 'getSessions' in the main process options\n  - If you are bundling your main process code and using Electron < v5, you'll need to manually configure a preload script`);\n        });\n      },\n      sendScope: (body: string) => {\n        fetch(buildUrl(IPCChannel.SCOPE), { method: 'POST', body, headers }).catch(() => {\n          // ignore\n        });\n      },\n      sendEvent: (body: string) => {\n        fetch(buildUrl(IPCChannel.EVENT), { method: 'POST', body, headers }).catch(() => {\n          // ignore\n        });\n      },\n      sendEnvelope: (body: string | Uint8Array) => {\n        fetch(buildUrl(IPCChannel.ENVELOPE), { method: 'POST', body, headers }).catch(() => {\n          // ignore\n        });\n      },\n      sendStatus: (status: RendererStatus) => {\n        fetch(buildUrl(IPCChannel.STATUS), { method: 'POST', body: JSON.stringify({ status }), headers }).catch(() => {\n          // ignore\n        });\n      },\n      sendAddMetric: (metric: MetricIPCMessage) => {\n        fetch(buildUrl(IPCChannel.ADD_METRIC), { method: 'POST', body: JSON.stringify(metric), headers }).catch(() => {\n          // ignore\n        });\n      },\n    };\n  }\n}\n\nlet cachedInterface: IPCInterface | undefined;\n\n/**\n * Renderer IPC interface\n *\n * Favours IPC if its been exposed via a preload script but will\n * fallback to custom protocol and fetch if IPC is not available\n */\nexport function getIPC(): IPCInterface {\n  if (!cachedInterface) {\n    cachedInterface = getImplementation();\n    cachedInterface.sendRendererStart();\n  }\n\n  return cachedInterface;\n}\n"],"names":["PROTOCOL_SCHEME","logger","uuid4","RENDERER_ID_HEADER","IPCChannel"],"mappings":";;;AAAA;AACA;AAYA,SAAS,QAAQ,CAAC,OAAmB,EAAA;;;AAGnC,IAAA,OAAO,CAAG,EAAAA,mBAAe,CAAM,GAAA,EAAA,OAAO,aAAa;AACrD;AAEA;AACA,SAAS,iBAAiB,GAAA;;IAExB,IAAI,MAAM,CAAC,cAAc,EAAE;QACzB,OAAO,MAAM,CAAC,cAAc;AAC7B;AAAM,SAAA;AACL,QAAAC,YAAM,CAAC,GAAG,CAAC,qFAAqF,CAAC;;;QAIjG,MAAM,EAAE,IAAI,MAAM,CAAC,sBAAsB,GAAGC,WAAK,EAAE,CAAC;QACpD,MAAM,OAAO,GAA2B,EAAE,CAACC,sBAAkB,GAAG,EAAE,EAAE;QAEpE,OAAO;YACL,iBAAiB,EAAE,MAAK;gBACtB,KAAK,CAAC,QAAQ,CAACC,cAAU,CAAC,cAAc,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,MAAK;oBAC3F,OAAO,CAAC,KAAK,CAAC,CAAA;;;AAGmG,0HAAA,CAAA,CAAC;AACpH,iBAAC,CAAC;aACH;AACD,YAAA,SAAS,EAAE,CAAC,IAAY,KAAI;gBAC1B,KAAK,CAAC,QAAQ,CAACA,cAAU,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,MAAK;;AAEhF,iBAAC,CAAC;aACH;AACD,YAAA,SAAS,EAAE,CAAC,IAAY,KAAI;gBAC1B,KAAK,CAAC,QAAQ,CAACA,cAAU,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,MAAK;;AAEhF,iBAAC,CAAC;aACH;AACD,YAAA,YAAY,EAAE,CAAC,IAAyB,KAAI;gBAC1C,KAAK,CAAC,QAAQ,CAACA,cAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,MAAK;;AAEnF,iBAAC,CAAC;aACH;AACD,YAAA,UAAU,EAAE,CAAC,MAAsB,KAAI;AACrC,gBAAA,KAAK,CAAC,QAAQ,CAACA,cAAU,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,MAAK;;AAE7G,iBAAC,CAAC;aACH;AACD,YAAA,aAAa,EAAE,CAAC,MAAwB,KAAI;AAC1C,gBAAA,KAAK,CAAC,QAAQ,CAACA,cAAU,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,MAAK;;AAE7G,iBAAC,CAAC;aACH;SACF;AACF;AACH;AAEA,IAAI,eAAyC;AAE7C;;;;;AAKG;SACa,MAAM,GAAA;IACpB,IAAI,CAAC,eAAe,EAAE;QACpB,eAAe,GAAG,iBAAiB,EAAE;QACrC,eAAe,CAAC,iBAAiB,EAAE;AACpC;AAED,IAAA,OAAO,eAAe;AACxB;;;;"}