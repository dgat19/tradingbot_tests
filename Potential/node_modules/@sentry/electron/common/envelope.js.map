{"version":3,"file":"envelope.js","sources":["../src/src/common/envelope.ts"],"sourcesContent":["import { Attachment, AttachmentItem, Envelope, Event, EventItem, Profile } from '@sentry/types';\nimport { forEachEnvelopeItem } from '@sentry/utils';\n\n/** Pulls an event and additional envelope items out of an envelope. Returns undefined if there was no event */\nexport function eventFromEnvelope(envelope: Envelope): [Event, Attachment[], Profile | undefined] | undefined {\n  let event: Event | undefined;\n  const attachments: Attachment[] = [];\n  let profile: Profile | undefined;\n\n  forEachEnvelopeItem(envelope, (item, type) => {\n    if (type === 'event' || type === 'transaction' || type === 'feedback') {\n      event = Array.isArray(item) ? (item as EventItem)[1] : undefined;\n    } else if (type === 'attachment') {\n      const [headers, data] = item as AttachmentItem;\n\n      attachments.push({\n        filename: headers.filename,\n        attachmentType: headers.attachment_type,\n        contentType: headers.content_type,\n        data,\n      });\n    } else if (type === 'profile') {\n      profile = item[1] as unknown as Profile;\n    }\n  });\n\n  return event ? [event, attachments, profile] : undefined;\n}\n"],"names":["forEachEnvelopeItem"],"mappings":";;AAGA;AACM,SAAU,iBAAiB,CAAC,QAAkB,EAAA;AAClD,IAAA,IAAI,KAAwB;IAC5B,MAAM,WAAW,GAAiB,EAAE;AACpC,IAAA,IAAI,OAA4B;IAEhCA,yBAAmB,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,IAAI,KAAI;QAC3C,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,aAAa,IAAI,IAAI,KAAK,UAAU,EAAE;AACrE,YAAA,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAI,IAAkB,CAAC,CAAC,CAAC,GAAG,SAAS;AACjE;aAAM,IAAI,IAAI,KAAK,YAAY,EAAE;AAChC,YAAA,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,IAAsB;YAE9C,WAAW,CAAC,IAAI,CAAC;gBACf,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,cAAc,EAAE,OAAO,CAAC,eAAe;gBACvC,WAAW,EAAE,OAAO,CAAC,YAAY;gBACjC,IAAI;AACL,aAAA,CAAC;AACH;aAAM,IAAI,IAAI,KAAK,SAAS,EAAE;AAC7B,YAAA,OAAO,GAAG,IAAI,CAAC,CAAC,CAAuB;AACxC;AACH,KAAC,CAAC;AAEF,IAAA,OAAO,KAAK,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,OAAO,CAAC,GAAG,SAAS;AAC1D;;;;"}