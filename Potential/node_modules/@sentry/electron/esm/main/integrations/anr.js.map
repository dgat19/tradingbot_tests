{"version":3,"file":"anr.js","sources":["../../../src/main/integrations/anr.ts"],"sourcesContent":["import { defineIntegration } from '@sentry/core';\nimport { anrIntegration as nodeAnrIntegration } from '@sentry/node';\nimport { Integration } from '@sentry/types';\nimport { app, powerMonitor } from 'electron';\n\nimport { ELECTRON_MAJOR_VERSION } from '../electron-normalize';\n\ntype Options = Parameters<typeof nodeAnrIntegration>[0];\n\n/**\n * Starts a worker thread to detect App Not Responding (ANR) events\n */\nexport const anrIntegration: (options: Options) => Integration = defineIntegration((options: Options = {}) => {\n  if (ELECTRON_MAJOR_VERSION < 22) {\n    throw new Error('Main process ANR detection requires Electron v22+');\n  }\n\n  const integration = nodeAnrIntegration({\n    ...options,\n    staticTags: {\n      'event.environment': 'javascript',\n      'event.origin': 'electron',\n      'event.process': 'browser',\n      ...options.staticTags,\n    },\n    appRootPath: app.getAppPath(),\n  });\n\n  powerMonitor.on('suspend', () => {\n    integration.stopWorker();\n  });\n\n  powerMonitor.on('resume', () => {\n    integration.startWorker();\n  });\n\n  return integration;\n});\n"],"names":["nodeAnrIntegration"],"mappings":";;;;;AASA;;AAEG;AACU,MAAA,cAAc,GAAsC,iBAAiB,CAAC,CAAC,OAAA,GAAmB,EAAE,KAAI;IAC3G,IAAI,sBAAsB,GAAG,EAAE,EAAE;AAC/B,QAAA,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC;AACrE;IAED,MAAM,WAAW,GAAGA,gBAAkB,CAAC;AACrC,QAAA,GAAG,OAAO;AACV,QAAA,UAAU,EAAE;AACV,YAAA,mBAAmB,EAAE,YAAY;AACjC,YAAA,cAAc,EAAE,UAAU;AAC1B,YAAA,eAAe,EAAE,SAAS;YAC1B,GAAG,OAAO,CAAC,UAAU;AACtB,SAAA;AACD,QAAA,WAAW,EAAE,GAAG,CAAC,UAAU,EAAE;AAC9B,KAAA,CAAC;AAEF,IAAA,YAAY,CAAC,EAAE,CAAC,SAAS,EAAE,MAAK;QAC9B,WAAW,CAAC,UAAU,EAAE;AAC1B,KAAC,CAAC;AAEF,IAAA,YAAY,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAK;QAC7B,WAAW,CAAC,WAAW,EAAE;AAC3B,KAAC,CAAC;AAEF,IAAA,OAAO,WAAW;AACpB,CAAC;;;;"}