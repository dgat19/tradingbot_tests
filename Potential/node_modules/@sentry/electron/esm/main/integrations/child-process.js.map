{"version":3,"file":"child-process.js","sources":["../../../src/main/integrations/child-process.ts"],"sourcesContent":["import { addBreadcrumb, captureMessage, defineIntegration } from '@sentry/core';\nimport { NodeClient } from '@sentry/node';\nimport { SeverityLevel } from '@sentry/types';\nimport { app } from 'electron';\n\nimport { EXIT_REASONS, ExitReason } from '../electron-normalize';\nimport { ElectronMainOptions } from '../sdk';\n\ntype OrBool<T> = {\n  [P in keyof T]: T[P] | boolean;\n};\n\nexport interface ChildProcessOptions {\n  /** Child process events that generate breadcrumbs */\n  breadcrumbs: Readonly<ExitReason[]>;\n  /** Child process events that generate Sentry events */\n  events: Readonly<ExitReason[]>;\n}\n\nconst DEFAULT_OPTIONS: ChildProcessOptions = {\n  breadcrumbs: EXIT_REASONS,\n  events: ['abnormal-exit', 'launch-failed', 'integrity-failure'],\n};\n\n/** Gets message and severity */\nfunction getMessageAndSeverity(reason: ExitReason, proc?: string): { message: string; level: SeverityLevel } {\n  const message = `'${proc}' process exited with '${reason}'`;\n\n  switch (reason) {\n    case 'abnormal-exit':\n    case 'killed':\n      return { message, level: 'warning' };\n    case 'crashed':\n    case 'oom':\n    case 'launch-failed':\n    case 'integrity-failure':\n      return { message, level: 'fatal' };\n    default:\n      return { message, level: 'debug' };\n  }\n}\n\n/**\n * Adds breadcrumbs for Electron child process events.\n */\nexport const childProcessIntegration = defineIntegration((userOptions: Partial<OrBool<ChildProcessOptions>> = {}) => {\n  const { breadcrumbs, events } = userOptions;\n\n  const options: ChildProcessOptions = {\n    breadcrumbs: Array.isArray(breadcrumbs) ? breadcrumbs : breadcrumbs === false ? [] : DEFAULT_OPTIONS.breadcrumbs,\n    events: Array.isArray(events) ? events : events === false ? [] : DEFAULT_OPTIONS.events,\n  };\n\n  return {\n    name: 'ChildProcess',\n    setup(client: NodeClient) {\n      const { breadcrumbs, events } = options;\n      const allReasons = Array.from(new Set([...breadcrumbs, ...events]));\n\n      // only hook these events if we're after more than just the unresponsive event\n      if (allReasons.length > 0) {\n        const clientOptions = client.getOptions() as ElectronMainOptions;\n\n        app.on('child-process-gone', (_, details) => {\n          const { reason } = details;\n\n          // Capture message first\n          if (events.includes(reason)) {\n            const { message, level } = getMessageAndSeverity(details.reason, details.type);\n            captureMessage(message, { level, tags: { 'event.process': details.type } });\n          }\n\n          // And then add breadcrumbs for subsequent events\n          if (breadcrumbs.includes(reason)) {\n            addBreadcrumb({\n              type: 'process',\n              category: 'child-process',\n              ...getMessageAndSeverity(details.reason, details.type),\n              data: details,\n            });\n          }\n        });\n\n        app.on('render-process-gone', (_, contents, details) => {\n          const { reason } = details;\n          const name = clientOptions?.getRendererName?.(contents) || 'renderer';\n\n          // Capture message first\n          if (events.includes(reason)) {\n            const { message, level } = getMessageAndSeverity(details.reason, name);\n            captureMessage(message, level);\n          }\n\n          // And then add breadcrumbs for subsequent events\n          if (breadcrumbs.includes(reason)) {\n            addBreadcrumb({\n              type: 'process',\n              category: 'child-process',\n              ...getMessageAndSeverity(details.reason, name),\n              data: details,\n            });\n          }\n        });\n      }\n    },\n  };\n});\n"],"names":[],"mappings":"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"}