{"version":3,"file":"ipc.js","sources":["../src/src/main/ipc.ts"],"sourcesContent":["import { captureEvent, getClient, getCurrentScope, metrics } from '@sentry/node';\nimport { Attachment, Event, ScopeData } from '@sentry/types';\nimport { logger, parseEnvelope, SentryError } from '@sentry/utils';\nimport { app, ipcMain, protocol, WebContents, webContents } from 'electron';\n\nimport { eventFromEnvelope } from '../common/envelope';\nimport { IPCChannel, IPCMode, MetricIPCMessage, PROTOCOL_SCHEME, RendererStatus } from '../common/ipc';\nimport { createRendererAnrStatusHandler } from './anr';\nimport { registerProtocol } from './electron-normalize';\nimport { rendererProfileFromIpc } from './integrations/renderer-profiling';\nimport { mergeEvents } from './merge';\nimport { normalizeUrlsInReplayEnvelope } from './normalize';\nimport { ElectronMainOptionsInternal } from './sdk';\n\nlet KNOWN_RENDERERS: Set<number> | undefined;\nlet WINDOW_ID_TO_WEB_CONTENTS: Map<string, number> | undefined;\n\nconst SENTRY_CUSTOM_SCHEME = {\n  scheme: PROTOCOL_SCHEME,\n  privileges: { bypassCSP: true, corsEnabled: true, supportFetchAPI: true, secure: true },\n};\n\nfunction newProtocolRenderer(): void {\n  KNOWN_RENDERERS = KNOWN_RENDERERS || new Set();\n  WINDOW_ID_TO_WEB_CONTENTS = WINDOW_ID_TO_WEB_CONTENTS || new Map();\n\n  for (const wc of webContents.getAllWebContents()) {\n    const wcId = wc.id;\n    if (KNOWN_RENDERERS.has(wcId)) {\n      continue;\n    }\n\n    if (!wc.isDestroyed()) {\n      wc.executeJavaScript('window.__SENTRY_RENDERER_ID__').then((windowId: string | undefined) => {\n        if (windowId && KNOWN_RENDERERS && WINDOW_ID_TO_WEB_CONTENTS) {\n          KNOWN_RENDERERS.add(wcId);\n          WINDOW_ID_TO_WEB_CONTENTS.set(windowId, wcId);\n\n          wc.once('destroyed', () => {\n            KNOWN_RENDERERS?.delete(wcId);\n            WINDOW_ID_TO_WEB_CONTENTS?.delete(windowId);\n          });\n        }\n      }, logger.error);\n    }\n  }\n}\n\nfunction captureEventFromRenderer(\n  options: ElectronMainOptionsInternal,\n  event: Event,\n  attachments: Attachment[],\n  contents?: WebContents,\n): void {\n  const process = contents ? options?.getRendererName?.(contents) || 'renderer' : 'renderer';\n\n  // Ensure breadcrumbs are empty as they sent via scope updates\n  event.breadcrumbs = event.breadcrumbs || [];\n\n  // Remove the environment as it defaults to 'production' and overwrites the main process environment\n  delete event.environment;\n\n  // Remove the SDK info as we want the Electron SDK to be the one reporting the event\n  delete event.sdk?.name;\n  delete event.sdk?.version;\n  delete event.sdk?.packages;\n\n  captureEvent(mergeEvents(event, { tags: { 'event.process': process } }), { attachments });\n}\n\nfunction handleEvent(options: ElectronMainOptionsInternal, jsonEvent: string, contents?: WebContents): void {\n  let event: Event;\n  try {\n    event = JSON.parse(jsonEvent) as Event;\n  } catch {\n    logger.warn('sentry-electron received an invalid event message');\n    return;\n  }\n\n  captureEventFromRenderer(options, event, [], contents);\n}\n\nfunction handleEnvelope(options: ElectronMainOptionsInternal, env: Uint8Array | string, contents?: WebContents): void {\n  const envelope = parseEnvelope(env);\n\n  const eventAndAttachments = eventFromEnvelope(envelope);\n  if (eventAndAttachments) {\n    const [event, attachments, profile] = eventAndAttachments;\n\n    if (profile) {\n      // We have a 'profile' item and there is no way for us to pass this through event capture\n      // so store them in a cache and reattach them via the `beforeEnvelope` hook before sending\n      rendererProfileFromIpc(event, profile);\n    }\n\n    captureEventFromRenderer(options, event, attachments, contents);\n  } else {\n    const normalizedEnvelope = normalizeUrlsInReplayEnvelope(envelope, app.getAppPath());\n    // Pass other types of envelope straight to the transport\n    void getClient()?.getTransport()?.send(normalizedEnvelope);\n  }\n}\n\nfunction handleMetric(metric: MetricIPCMessage): void {\n  const client = getClient();\n\n  if (!client) {\n    return;\n  }\n\n  const metricsAggregator = metrics.getMetricsAggregatorForClient(client);\n\n  metricsAggregator.add(metric.metricType, metric.name, metric.value, metric.unit, metric.tags, metric.timestamp);\n}\n\n/** Is object defined and has keys */\nfunction hasKeys(obj: any): boolean {\n  return obj != undefined && Object.keys(obj).length > 0;\n}\n\n/**\n * Handle scope updates from renderer processes\n */\nfunction handleScope(options: ElectronMainOptionsInternal, jsonScope: string): void {\n  let sentScope: ScopeData;\n  try {\n    sentScope = JSON.parse(jsonScope) as ScopeData;\n  } catch {\n    logger.warn('sentry-electron received an invalid scope message');\n    return;\n  }\n\n  const scope = getCurrentScope();\n\n  if (hasKeys(sentScope.user)) {\n    scope.setUser(sentScope.user);\n  }\n\n  if (hasKeys(sentScope.tags)) {\n    scope.setTags(sentScope.tags);\n  }\n\n  if (hasKeys(sentScope.extra)) {\n    scope.setExtras(sentScope.extra);\n  }\n\n  for (const attachment of sentScope.attachments || []) {\n    scope.addAttachment(attachment);\n  }\n\n  const breadcrumb = sentScope.breadcrumbs.pop();\n  if (breadcrumb) {\n    scope.addBreadcrumb(breadcrumb, options?.maxBreadcrumbs || 100);\n  }\n}\n\n/** Enables Electron protocol handling */\nfunction configureProtocol(options: ElectronMainOptionsInternal): void {\n  if (app.isReady()) {\n    throw new SentryError(\"Sentry SDK should be initialized before the Electron app 'ready' event is fired\");\n  }\n\n  protocol.registerSchemesAsPrivileged([SENTRY_CUSTOM_SCHEME]);\n\n  // We Proxy this function so that later user calls to registerSchemesAsPrivileged don't overwrite our custom scheme\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  protocol.registerSchemesAsPrivileged = new Proxy(protocol.registerSchemesAsPrivileged, {\n    apply: (target, __, args: Parameters<typeof protocol.registerSchemesAsPrivileged>) => {\n      target([...args[0], SENTRY_CUSTOM_SCHEME]);\n    },\n  });\n\n  const rendererStatusChanged = createRendererAnrStatusHandler();\n\n  app\n    .whenReady()\n    .then(() => {\n      for (const sesh of options.getSessions()) {\n        registerProtocol(sesh.protocol, PROTOCOL_SCHEME, (request) => {\n          const getWebContents = (): WebContents | undefined => {\n            const webContentsId = request.windowId ? WINDOW_ID_TO_WEB_CONTENTS?.get(request.windowId) : undefined;\n            return webContentsId ? webContents.fromId(webContentsId) : undefined;\n          };\n\n          const data = request.body;\n          if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.RENDERER_START}`)) {\n            newProtocolRenderer();\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.EVENT}`) && data) {\n            handleEvent(options, data.toString(), getWebContents());\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.SCOPE}`) && data) {\n            handleScope(options, data.toString());\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.ENVELOPE}`) && data) {\n            handleEnvelope(options, data, getWebContents());\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.ADD_METRIC}`) && data) {\n            handleMetric(JSON.parse(data.toString()) as MetricIPCMessage);\n          } else if (request.url.startsWith(`${PROTOCOL_SCHEME}://${IPCChannel.STATUS}`) && data) {\n            const contents = getWebContents();\n            if (contents) {\n              const status = (JSON.parse(data.toString()) as { status: RendererStatus }).status;\n              rendererStatusChanged(status, contents);\n            }\n          }\n        });\n      }\n    })\n    .catch((error) => logger.error(error));\n}\n\n/**\n * Hooks IPC for communication with the renderer processes\n */\nfunction configureClassic(options: ElectronMainOptionsInternal): void {\n  ipcMain.on(IPCChannel.RENDERER_START, ({ sender }) => {\n    const id = sender.id;\n    // Keep track of renderers that are using IPC\n    KNOWN_RENDERERS = KNOWN_RENDERERS || new Set();\n\n    if (KNOWN_RENDERERS.has(id)) {\n      return;\n    }\n\n    // In older Electron, sender can be destroyed before this callback is called\n    if (!sender.isDestroyed()) {\n      KNOWN_RENDERERS.add(id);\n\n      sender.once('destroyed', () => {\n        KNOWN_RENDERERS?.delete(id);\n      });\n    }\n  });\n  ipcMain.on(IPCChannel.EVENT, ({ sender }, jsonEvent: string) => handleEvent(options, jsonEvent, sender));\n  ipcMain.on(IPCChannel.SCOPE, (_, jsonScope: string) => handleScope(options, jsonScope));\n  ipcMain.on(IPCChannel.ENVELOPE, ({ sender }, env: Uint8Array | string) => handleEnvelope(options, env, sender));\n\n  const rendererStatusChanged = createRendererAnrStatusHandler();\n  ipcMain.on(IPCChannel.STATUS, ({ sender }, status: RendererStatus) => rendererStatusChanged(status, sender));\n\n  ipcMain.on(IPCChannel.ADD_METRIC, (_, metric: MetricIPCMessage) => handleMetric(metric));\n}\n\n/** Sets up communication channels with the renderer */\nexport function configureIPC(options: ElectronMainOptionsInternal): void {\n  // eslint-disable-next-line no-bitwise\n  if ((options.ipcMode & IPCMode.Protocol) > 0) {\n    configureProtocol(options);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  if ((options.ipcMode & IPCMode.Classic) > 0) {\n    configureClassic(options);\n  }\n}\n"],"names":["PROTOCOL_SCHEME","webContents","logger","captureEvent","mergeEvents","envelope","parseEnvelope","eventFromEnvelope","rendererProfileFromIpc","normalizeUrlsInReplayEnvelope","app","getClient","metrics","getCurrentScope","SentryError","protocol","createRendererAnrStatusHandler","registerProtocol","IPCChannel","ipcMain","IPCMode"],"mappings":"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"}