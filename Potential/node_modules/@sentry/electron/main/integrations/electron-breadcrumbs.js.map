{"version":3,"file":"electron-breadcrumbs.js","sources":["../../src/src/main/integrations/electron-breadcrumbs.ts"],"sourcesContent":["import { addBreadcrumb, defineIntegration } from '@sentry/core';\nimport { NodeClient } from '@sentry/node';\nimport { Breadcrumb } from '@sentry/types';\nimport { app, autoUpdater, BrowserWindow, powerMonitor, screen, WebContents } from 'electron';\n\nimport { getRendererProperties, trackRendererProperties } from '../renderers';\nimport { ElectronMainOptions } from '../sdk';\n\n/** A function that returns true if the named event should create breadcrumbs */\ntype EventFunction = (name: string) => boolean;\ntype EventTypes = boolean | string[] | EventFunction | undefined;\n\nexport interface ElectronBreadcrumbsOptions<T> {\n  /**\n   * app events\n   *\n   * default: (name) => !name.startsWith('remote-')\n   */\n  app: T;\n  /**\n   * autoUpdater events\n   *\n   * default: all\n   */\n  autoUpdater: T;\n  /**\n   * webContents events\n   * default: ['dom-ready', 'context-menu', 'load-url', 'destroyed']\n   */\n  webContents: T;\n  /**\n   * BrowserWindow events\n   *\n   * default: ['closed', 'close', 'unresponsive', 'responsive', 'show', 'blur', 'focus', 'hide',\n   *            'maximize', 'minimize', 'restore', 'enter-full-screen', 'leave-full-screen' ]\n   */\n  browserWindow: T;\n  /**\n   * screen events\n   *\n   * default: all\n   */\n  screen: T;\n  /**\n   * powerMonitor events\n   *\n   * default: all\n   */\n  powerMonitor: T;\n\n  /**\n   * Whether to capture window titles with webContents/browserWindow breadcrumbs\n   *\n   * default: false\n   */\n  captureWindowTitles: boolean;\n}\n\nconst DEFAULT_OPTIONS: ElectronBreadcrumbsOptions<EventFunction> = {\n  // We exclude events starting with remote as they can be quite verbose\n  app: (name) => !name.startsWith('remote-'),\n  autoUpdater: () => true,\n  webContents: (name) => ['dom-ready', 'context-menu', 'load-url', 'destroyed'].includes(name),\n  browserWindow: (name) =>\n    [\n      'closed',\n      'close',\n      'unresponsive',\n      'responsive',\n      'show',\n      'blur',\n      'focus',\n      'hide',\n      'maximize',\n      'minimize',\n      'restore',\n      'enter-full-screen',\n      'leave-full-screen',\n    ].includes(name),\n  screen: () => true,\n  powerMonitor: () => true,\n  captureWindowTitles: false,\n};\n\n/** Converts all user supplied options to function | false */\nexport function normalizeOptions(\n  options: Partial<ElectronBreadcrumbsOptions<EventTypes>>,\n): Partial<ElectronBreadcrumbsOptions<EventFunction | false>> {\n  return (Object.keys(options) as (keyof ElectronBreadcrumbsOptions<EventTypes>)[]).reduce((obj, k) => {\n    if (k === 'captureWindowTitles') {\n      obj[k] = !!options[k];\n    } else {\n      const val: EventTypes = options[k];\n      if (Array.isArray(val)) {\n        obj[k] = (name) => val.includes(name);\n      } else if (typeof val === 'function' || val === false) {\n        obj[k] = val;\n      }\n    }\n\n    return obj;\n  }, {} as Partial<ElectronBreadcrumbsOptions<EventFunction | false>>);\n}\n\n/**\n * Adds breadcrumbs for Electron events.\n */\nexport const electronBreadcrumbsIntegration = defineIntegration(\n  (userOptions: Partial<ElectronBreadcrumbsOptions<EventTypes>> = {}) => {\n    const options: ElectronBreadcrumbsOptions<EventFunction | false> = {\n      ...DEFAULT_OPTIONS,\n      ...normalizeOptions(userOptions),\n    };\n\n    function patchEventEmitter(\n      emitter: NodeJS.EventEmitter | WebContents | BrowserWindow,\n      category: string,\n      shouldCapture: EventFunction | undefined | false,\n      id?: number | undefined,\n    ): void {\n      const emit = emitter.emit.bind(emitter) as (event: string, ...args: unknown[]) => boolean;\n\n      emitter.emit = (event: string, ...args: unknown[]) => {\n        if (shouldCapture && shouldCapture(event)) {\n          const breadcrumb: Breadcrumb = {\n            category: 'electron',\n            message: `${category}.${event}`,\n            timestamp: new Date().getTime() / 1_000,\n            type: 'ui',\n          };\n\n          if (id) {\n            breadcrumb.data = { ...getRendererProperties(id) };\n\n            if (!options.captureWindowTitles && breadcrumb.data?.title) {\n              delete breadcrumb.data?.title;\n            }\n          }\n\n          addBreadcrumb(breadcrumb);\n        }\n\n        return emit(event, ...args);\n      };\n    }\n\n    return {\n      name: 'ElectronBreadcrumbs',\n      setup(client: NodeClient) {\n        const clientOptions = client.getOptions() as ElectronMainOptions | undefined;\n\n        trackRendererProperties();\n\n        app.whenReady().then(\n          () => {\n            // We can't access these until app 'ready'\n            if (options.screen) {\n              patchEventEmitter(screen, 'screen', options.screen);\n            }\n\n            if (options.powerMonitor) {\n              patchEventEmitter(powerMonitor, 'powerMonitor', options.powerMonitor);\n            }\n          },\n          () => {\n            // ignore\n          },\n        );\n\n        if (options.app) {\n          patchEventEmitter(app, 'app', options.app);\n        }\n\n        if (options.autoUpdater) {\n          patchEventEmitter(autoUpdater, 'autoUpdater', options.autoUpdater);\n        }\n\n        if (options.browserWindow) {\n          app.on('browser-window-created', (_, window) => {\n            const id = window.webContents.id;\n            const windowName = clientOptions?.getRendererName?.(window.webContents) || 'window';\n            patchEventEmitter(window, windowName, options.browserWindow, id);\n          });\n        }\n\n        if (options.webContents) {\n          app.on('web-contents-created', (_, contents) => {\n            const id = contents.id;\n            const webContentsName = clientOptions?.getRendererName?.(contents) || 'renderer';\n            patchEventEmitter(contents, webContentsName, options.webContents, id);\n          });\n        }\n      },\n    };\n  },\n);\n"],"names":["defineIntegration","getRendererProperties","addBreadcrumb","trackRendererProperties","app","screen","powerMonitor","autoUpdater"],"mappings":"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"}