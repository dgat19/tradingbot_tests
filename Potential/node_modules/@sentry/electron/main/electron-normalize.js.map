{"version":3,"file":"electron-normalize.js","sources":["../src/src/main/electron-normalize.ts"],"sourcesContent":["import { parseSemver } from '@sentry/utils';\nimport { app } from 'electron';\nimport { join } from 'path';\n\nimport { RENDERER_ID_HEADER } from '../common/ipc';\n\nconst parsed = parseSemver(process.versions.electron);\nconst version = { major: parsed.major || 0, minor: parsed.minor || 0, patch: parsed.patch || 0 };\n\nexport const ELECTRON_MAJOR_VERSION = version.major;\n\nexport const EXIT_REASONS = [\n  'clean-exit',\n  'abnormal-exit',\n  'killed',\n  'crashed',\n  'oom',\n  'launch-failed',\n  'integrity-failure',\n] as const;\nexport type ExitReason = (typeof EXIT_REASONS)[number];\nexport const CRASH_REASONS: Readonly<ExitReason[]> = ['crashed', 'oom'] as const;\n\n/** Gets the Sentry Cache path */\nexport function getSentryCachePath(): string {\n  return join(app.getPath('userData'), 'sentry');\n}\n\n/**\n * Uses Crashpad on Linux\n * https://github.com/electron/electron/issues/27859\n */\nfunction crashpadLinux(): boolean {\n  if (version.major >= 16) {\n    return true;\n  }\n\n  // Crashpad Linux for v15 is behind a switch\n  return app.commandLine.hasSwitch('enable-crashpad');\n}\n\n/** Is using Crashpad */\nexport function usesCrashpad(): boolean {\n  return process.platform !== 'linux' || crashpadLinux();\n}\n\n/**\n * Electron >= 25 support `protocol.handle`\n */\nfunction supportsProtocolHandle(): boolean {\n  return version.major >= 25;\n}\n\ninterface InternalRequest {\n  windowId?: string;\n  url: string;\n  body?: Buffer;\n}\n\n/**\n * Registers a custom protocol to receive events from the renderer\n *\n * Uses `protocol.handle` if available, otherwise falls back to `protocol.registerStringProtocol`\n */\nexport function registerProtocol(\n  protocol: Electron.Protocol,\n  scheme: string,\n  callback: (request: InternalRequest) => void,\n): void {\n  if (supportsProtocolHandle()) {\n    protocol.handle(scheme, async (request) => {\n      callback({\n        windowId: request.headers.get(RENDERER_ID_HEADER) || undefined,\n        url: request.url,\n        body: Buffer.from(await request.arrayBuffer()),\n      });\n\n      return new Response('');\n    });\n  } else {\n    // eslint-disable-next-line deprecation/deprecation\n    protocol.registerStringProtocol(scheme, (request, complete) => {\n      callback({\n        windowId: request.headers[RENDERER_ID_HEADER],\n        url: request.url,\n        body: request.uploadData?.[0]?.bytes,\n      });\n\n      complete('');\n    });\n  }\n}\n"],"names":["parseSemver","join","app","RENDERER_ID_HEADER"],"mappings":";;;;;AAMA,MAAM,MAAM,GAAGA,iBAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACrD,MAAM,OAAO,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,CAAC,EAAE;AAEnF,MAAA,sBAAsB,GAAG,OAAO,CAAC;AAEjC,MAAA,YAAY,GAAG;IAC1B,YAAY;IACZ,eAAe;IACf,QAAQ;IACR,SAAS;IACT,KAAK;IACL,eAAe;IACf,mBAAmB;;MAGR,aAAa,GAA2B,CAAC,SAAS,EAAE,KAAK;AAEtE;SACgB,kBAAkB,GAAA;IAChC,OAAOC,SAAI,CAACC,YAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC;AAChD;AAEA;;;AAGG;AACH,SAAS,aAAa,GAAA;AACpB,IAAA,IAAI,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE;AACvB,QAAA,OAAO,IAAI;AACZ;;IAGD,OAAOA,YAAG,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC;AACrD;AAEA;SACgB,YAAY,GAAA;IAC1B,OAAO,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,aAAa,EAAE;AACxD;AAEA;;AAEG;AACH,SAAS,sBAAsB,GAAA;AAC7B,IAAA,OAAO,OAAO,CAAC,KAAK,IAAI,EAAE;AAC5B;AAQA;;;;AAIG;SACa,gBAAgB,CAC9B,QAA2B,EAC3B,MAAc,EACd,QAA4C,EAAA;IAE5C,IAAI,sBAAsB,EAAE,EAAE;QAC5B,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,OAAO,KAAI;AACxC,YAAA,QAAQ,CAAC;gBACP,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAACC,sBAAkB,CAAC,IAAI,SAAS;gBAC9D,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,WAAW,EAAE,CAAC;AAC/C,aAAA,CAAC;AAEF,YAAA,OAAO,IAAI,QAAQ,CAAC,EAAE,CAAC;AACzB,SAAC,CAAC;AACH;AAAM,SAAA;;QAEL,QAAQ,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ,KAAI;AAC5D,YAAA,QAAQ,CAAC;AACP,gBAAA,QAAQ,EAAE,OAAO,CAAC,OAAO,CAACA,sBAAkB,CAAC;gBAC7C,GAAG,EAAE,OAAO,CAAC,GAAG;gBAChB,IAAI,EAAE,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,KAAK;AACrC,aAAA,CAAC;YAEF,QAAQ,CAAC,EAAE,CAAC;AACd,SAAC,CAAC;AACH;AACH;;;;;;;;;"}